name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      releaseId: ${{ steps.changesets.outputs.pullRequestNumber }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - uses: changesets/action@v1
        with:
          version: npm run version
          commit: 'chore: version packages'
          title: 'chore: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: steps.changesets.outputs.hasChangesets == 'false'
        run: git push --follow-tags

  build_compiler:
    name: Build debrix_compiler (${{ matrix.target }})
    if: needs.release.outputs.published == 'true'
    runs-on: ubuntu-latest
    needs: release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive_name: debrix-windows-x86_64.exe
          - target: x86_64-unknown-linux-musl
            archive_name: debrix-linux-x86_64
          - target: x86_64-apple-darwin
            archive_name: debrix-darwin-x86_64
    steps:
      - uses: actions/checkout@master
      - id: build
        uses: rust-build/rust-build.action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARCHIVE_NAME: ${{ matrix.archive_name }}
        with:
          RUSTTARGET: ${{ matrix.target }}
      - run: node .github/scripts/upload_assets.js
        env:
          INPUT_RELEASE_ID: ${{ needs.release.outputs.published }}
          INPUT_FILES: ${{ matrix.archive_name }}
